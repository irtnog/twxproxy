TWX Proxy Pro v2.10 Changes

Well, after some clean up of the last set of bug fixes.  There really was nothing else to do except to add new
features, and change a few others.  I started look at the feature requests from twxproxy.com.  Although, I did
not scan through posts prior to Novembe 2004.  I found a few feature request that made since to add to TWX at
some point. This of course not including a few of my own requests that went unanswered by Xide.  So below you
will find the break down of all the changes, additions, fixes in TWX.

Program:

* PROGRAM NAME: As I had reported on the TWX Proxy Group's website.  In order to keep ElderProphet, and his
  fans at EIS, happy and to allow him to produce and release the "Official" TWX Proxy.  I have made a minor
  changed to TWX's name.  This will allow the Tradewars 2002 players to know which TWX product they are using.
  And to know that the two programs are not the same product.

  From this release forward, the name of this program will be TWX Proxy Pro, aka TWX Pro.

  NOTE: I have also changed the icons used for TWX.  Instead of the Green colored icons.  It now uses a
  red colored icons.

* INTERPRETER: In v2.03, Xide added a new parameter the OpenMenu command.  This parameter was to allow the
  script author to cause TWX not to pause once a Menu was opened.  (I can only guess as to the reason for
  this, or as to whom may have want it added.)  But, Xide had neglicted to update the interpreter as to how
  many parameters it now takes, along with there types.  This has been corrected.

* INTERPRETER: On twxproxy.com RammaR had request that the STARDOCK System Value be updated by V Screen, in
  addition to visiting the sector StarDock is in.  This function has been added, and STARDOCK can now be
  updated by by the V Screen, as well as visiting the sector SD is in.

  NOTE: There is a draw back to this, that is caused by the original TWX Database code.  If you plan to use a
  script uses the STARDOCK value.  Then you must do one of the following for the SD sector to be available to
  the script after the V screen listing.

  1) Perform a manual V screen listing, then load any script that uses the STARDOCK value.
  2) Have a script perform the V screen listing, then have it load a script that uses the STARDOCK value.
  3) Hava the script perform the V screen listing, then perform a redisplay of the current sector.

  Option 3 is the most viable option for this.  As it will work for any script running at the time of the update.
  And those script(s) loaded by any script currently running.

* INTERPRETER: On twxproxy.com Traitor had request that two more System Values be added.  Both System Values as
  he had requested was to return the sectors that the Class 0 ports Alpha Centauri and Rylos are in.  Traitor
  you will be happy to know that both System Values have been added.

* MENU SYSTEM: Minor change to the display of TWX menus and custom menus.  First, moved the menu general
  options to the bottom of the display.  This places the menu options that you want/need uptop.  Second,
  changed the display color of the HotKey, or Option key, to make it easier to decern them from the rest of
  the menu.

* MENU SYSTEM: When v2.00 first went public myself and a few others. Requested that the menuing system the
  had the ability to be dynamic.  Or atleast be as close to dynamic without a complete rewrite.  With this
  release the menuing system is now dynamic.  Or as dynamic as it can be without a complete rewrite of the system.

* INTERPRETER: Added a new OPTIONAL parameter to the addMenu command.  This allows the user to create a menu,
  or menu item, that will be hidden upon display of the of it's parent menu.

  NOTE:  This is totally backwords compartible with previous behaviours of the command.

* INTERPRETER: Added a new command - hideMenuItem.  This allows the user to hide a menu item within the
  currently displayed parent menu.  If a menu item is hidden from view, it's hotkey/option key is not
  activatible.  This allows for the user to use two, or more, menus with the same hotkey/option key available
  for possible use.

  NOTE:  This can only be used on menu items in the currently opened parent menu.

* INTERPRETER: Added a new command - addMenuLabel.  This allows the user to add labels to a menu.

  NOTE:  Menu label can also be automatically hidden from display.  Or it can be hidden by the hideMenuItem
  command.

* MENU SYSTEM:  To allow for the use of labels with in a menu.  It was necessary to change the behaviour of
  displaying custom menus.  In previous TWX versions all menu items, to be display, was automatically sorted
  based upon it's hotkey/option key before they were displayed.  This sorting caused all the labels in a menu
  to be placed at the top of the menu display.

  Custom menus well no longer be sorted prior to being displayed.  This allows the user to create the menu
  in the way they wish it to be displayed.  And allows for the use of labels within the menu.

* COMPILER & CORE: When TWX v2.00 first came out.  Xide originally created the script compiler to improve the
  runnability of scripts in TWX.  He even created a external compiler for the script authors to compile their
  own scripts for possible distributions.  A feacture of the external compiler was the ability to add a
  description to the compiled script.  I, and I'm sure most everyone else, had thought that the script
  description would be displayed either just before it is run, or during the listing of the scripts in the
  script directory.

  Although, I never had the need to add a script description to my compiled scripts, as they were never
  distributed to anyone.  I had thought that during the several years TWX Proxy v2.xx was out. That someone
  would have done so.  I have yet to come across a compiled script that had a script description in it.

  But, what I had found within the last couple of days.  Was that the feature, although shown to be present in
  the TWXC.exe help display, was never fully implemented.  So, I went and finished implementing the feature.
  As the TWXC.exe's help display states.  If you wish to add a script description to your script when you
  compile it.  Just add another parameter that points to a text file that contains the script description.
  And it will compile compile your script and add the description, not the file with the description, to you
  compiled script.

  The script description will be displayed when doing a script listing, $SD.

  NOTE: The script description does not, nor will it ever, interfere with your scripts runnability or speed
  at which it will run.

* NETCODE & CORE: I believe that the displaying of local, i.e. the same computer, client connections and disconnects
  are not necessary.  So the default selected state of the 'Broadcast a message when a client connecs'
  in the setup menu has changed to the following:

	I. You are unable to changed the setting of this option, unless you ahve selected 'Accept external
            connections'.

	II. When not accepting external connections, the default is to not display messages when a local
        client is connecting/disconnecting.

* INTERPRETER: Further fixes for the new Decimal, or floating point, math operations.  As reported, and fixed,
  in the previous release there was a bug with a decimal Precision of 0.  And upon further investigation, I
  had found that there was a major issue with the results returned for any decimal calculations.

  I was able to locate and fix the problem with the decimal calculations.  But, since I had no idea as to why
  ElderProphet wanted Xide.  To code the decimal math operations they were coded.  So, I had planed to keep
  the original code, along side the working code, and add a new command to turn the old code on/off.

  But, after a surprised day of chating with ElderProphet. We had come to the conclusion that the old code
  was not needed.  And that we have very different opinions of how the Precision 0 code should be.  At first
  ElderProphet was of the strong opinion that the Precision 0 operations to behave exactly as previous versions
  of TWX.  This included not allowing decimal values to be given for any math operation.  And to truncate the
  results of Division calculations

  Then later he decided that allowing decimal values for all math operations. Was a natural step with the new
  decimal calculation operations, even for decimal precision 0.  With this I have no issue with, as I too also
  think it is natural to start allowing for the use of decimal values.

  But, I believe that when it comes to allowing whole numbers or decimal values.  That TWX should still behave
  similar to previous versions, when using a Precision of 0, by rounding down the results.  As this would
  follow the spirit of TWX's original math operations.  And follow the way that Tradewars 2002 does it's own
  math calculations.  With this it would also have the least amount of impact on currently available scripts.

  Of course ElderProhet has a different opinion on this, and refers to mine as just hogwash.  But, with the
  different versions of TWX going to be out.  There is really no need to becker over it.  As such I polished
  off the precision 0 code to be similar to previous version.  If you supply a whole number for a math
  operation.  The result will be the same as previous versions.  But, if you supply atleast one value that
  is a decimal.  Then the math operation(s) will perform the calculation, and the result will be rounded down.




TWX PROXY v2.05 Release Candidate Changes

Starting with release v2.05, all Bug releases will have the Release version number, 2.0x, incremented.
All releases with new features will have the Minor version number, 2.x5 incremented.
The Major version number, X.05, will be incremented when the number of, and/or the type of, new features require
a new version number.

Program:

* INTERPRETER: For the setSectorParameter command.  The variable content field was set to the wrong size.
  Instead of allowing for 40 characters, it only allowed 10.  Thanks goes to ElderProphet for bringing
  this to my attention, and for the correct field size.
  
  NOTE:  Because of this, all v2.03 and v2.03B13 game db's are not compatible with v2.05.  Export all your
  game data from the v2.03xx game db. Then create a new db in v2.05 and import the game data into this db.

* DATABASE:  Once you have created a Sector variable with the setSectorParameter.  The moment you did
  anything that would case the sector information to update.  Would cause all sector variable to
  "disappear" from the database.  This has been fixed.

* INTERPRETER: The setPrecision 0 was not working as intended.  As is documented in the TWX Proxy Script
  Reference.  setProcisision 0 is supposed to work the same as previous versions of TWX Proxy. i.e. Round down
  to the nearest number.  But, as SubG had reported, there was an issue with rounding to whole numbers.
  For Addition, the rounding worked as expected.  But, Division and Subtraction always round up to the next
  whole number.  While Multiplication rounded down two whole numbers.

  This has been fixed.

  NOTE:  There still is the issue of Multiplication rounding down two whole numbers, when using precisions
  other than zero.  ElderProphet has supposedly fixed all issues with the Floating Point precision.  But, he
  has refused all requests to send the updated code.

* INTERFACE: Tweety had stated that the options for the Logging of data to be disabled.  Until such time as
  the user enables the use of Logging for the current game db.  This is a logical behaviour, that should have
  already been in place.  This has been implemented in this release.

TWX PROXY v2.03 Build 13 Changes

Program:

* CORE:  There is a issues with TWX Proxy when making a connection to a local server.
  Either after the script command CONNECT has been issued, or when using the menuing
  system's connect option. i.e. $C  What happens is that TWX Proxy states that it is
  attempting to make a connection to the local server.  Yet, no connection is actually
  made, or attempted.  TWX Proxy just hangs at the message 'Attempint to connect to: server addy'.
  Since this issue only seems to happen on certain systems, it was really hard to track
  it down.

  NOTE: This issue has been around since v1.06b.

  This issue was caused by two factors. The first one is, there where a few bugs in the
  telnet component used.  This can be easily solved by using the ICS distrobution dated
  March 13, 2005 or newer.  The second thing is listed below:

* CORE:  Xide originally coded TWX Proxy on Delphi 5.  As such he had coded an event, that
  is inherited from the Telnet component class, to use a PChar for one of it's parameters.
  But, the original event, as inherited from the Telnet component class, requires that
  particular parameter to be a Pointer.  In Delphi 7, or newer, the inherited event's parameter
  must be of the same type.  As such, it will throw a compiler error while compiling/building
  the project.  So changing the event's parameter to be a Pointer was needed.  But, also
  there was a need to update the event's method.  To typecast the Pointer parameter to a
  PChar for use within the method.

* INTERFACE:  Fixed a bug in the About window.  It was not displaying the
  correct information for the version number.

* EXECUTABLE:  Added build/fileversion information to the .exe file.  The build
  information has four fields.  Major.Minor.Release.Build
  By droping the build field, the fileversion will correspond to the program's version
  number. i.e. build information 2.0.3.x -> v2.03

* CORE:  Added code to retrieve version information from the .exe file.

* CORE:  Changed Constant that holds the Program Version number, to a variable.

* CORE:  Added code to update the Program Version variable with the
  correct version information.  Based upon the version information retrieved
  from the .exe.

* INTERFACE:  Changed the font color used in the About window's labels.  This
  allows the label to be readable, with the current background image.

* INTERFACE:  Updated the Copyright to include years 2003 thru 2005.


TWX PROXY v2.03 Changes

Program:

* INTERPRETER: Modified the command, 'OPENMENU', it was causing the script to
  pause execution as soon as the menu was opened.  This is now optional by
  specifying a second parameter to the command.

* LOGGING: Added support for binary capture file recording and playback.  When
  enabled from the setup form, binary logs will automatically be stored by TWX
  in the same manner as the old text logs.  Its possible to make extracts from
  these capture files using the CapEdit program and then play them back at the
  speed they were recorded back within TWX.

* INTERPRETER: Added the commands, 'SETSECTORPARAMETER' and 'GETSECTORPARAMETER'
  which can be used to set sector specific values in the database.  These values
  persist between scripts and can be accessed at any time.

* DATABASE: Added support for dynamic sector variables.  These can now be accessed
  via the scripting language.

* INTERFACE: Fixed an issue with the script file filtering when adding a script
  to the auto run list.  It should now allow .cts scripts to be added instead
  of the old .es files.

* AUTHENTICATION: Scripts containing the pack2 subroutines will now attempt to
  authenticate if authentication hasn't taken place and the authentication process
  is enabled.  This means people won't need to restart the program in order to
  force it to authenticate (if they happened to be offline when it was first started).

* CORE: Resolved several minor memory leaks.

* CORE: Resolved several memory corruption issues that should generally improve 
  program stability.

* MENU SYSTEM: Added a search feature to variable dumps.  This will allow the
  dumping of a specific group of variables instead of the whole lot.

* INTERFACE: Adjusted the way the Game letter is entered into the setup
  form.  People were having problems involving spaces before the letter preventing
  it from reaching scripts properly.  Spaces will now be stripped out of the
  contents of this box when the OK button is pressed.

* COMPILER: Added checking for IF/END structure mismatches.  These were causing
  obscure errors during runtime with system assigned goto labels.  These errors
  will now be trapped and displayed at the end of compilation.

* INTERPRETER: Fixed a bug that was causing the 'STOP' command to terminate
  the script with an unknown error if the specified script was not found.

* INTERPRETER: Added support for script windows as they were in 1.09b.

* INTERPRETER: Added support for decimal calculations.

* INTERPRETER/COMPILER: Added a new command, 'SETPRECISION', that allows
  the decimal precision to be set for calculations.  The default precision
  is 0, to allow compability with older scripts.

* INTERPRETER/COMPILER: Added support for a new command, 'ROUND', that can
  be used to round a decimal value to a specified precision.

* INTERPRETER/COMPILER: Added a new system value, PORT.NAME.  This will
  return the name of a port in the specified sector.

* INTERPRETER/COMPILER: Added a new system value, PORT.EXISTS.  This will
  return 1 (TRUE) or 0 (FALSE) depending upon if the specified sector has
  a port or not.

* INTERPRETER/COMPILER: Added a new system value, SECTOR.UPDATED.  This
  will return the date/time stamp that a sector was last updated (as in the
  getSector command).

* INTERPRETER/COMPILER: Added a new system value, SECTOR.ANOMOLY.  This will
  return 1 (TRUE) or 0 (FALSE) depending upon if the specified sector has
  an anomoly in it.


Scripts/Subs:

* 1_MOVEFIG: Fixed a bug that was causing the script to bug out if the ship being
  used to transport fighters had max capacity of 100,000 or more.

* 1_SSM: Fixed a bug that was causing the script to bug out when it should have
  been upgrading the port as a player's experience increases.

* 2_MASSCOLONISE: Fixed a problem that was giving trigger errors instead of resuming the
  script after a disconnection/relog.

* SSM: Fixed a bug that was causing the script to drop a toll fig under only one of the
  ports it works at.

* SELLSTEAL: This routine will now check for a steal factor of zero when it initialises.
  This will prevent the obscure 'Unknown error on line 69' that was being caused by
  a divide-by-zero.

* SST: Fixed a recursive include problem that was preventing the script from properly
  compiling.


TWX PROXY v2.02 Changes

Program:

* MENU SYSTEM: Fixed a bug that was causing access violations when multiple menu-command
  macros were being sent to the terminal menu.

* INTERFACE: Added a tooltip to the TWX icon in the taskbar.  It now displays the name of
  the selected game.

* INTERFACE: Now when a database is deleted, its .cfg file containing saved script variables will
  also be removed.

* NETCODE: Doubled the downstream buffer size from 2048 to 4096 in the hope that this may
  solve the IRQL BSOD problems on some installations of Windows.

* NETCODE: Fixed a recursive protocol negotiation problem that was causing severe CPU overload
  when connecting to TWX Proxy with certain telnet clients (including Windows XP telnet).  Standardisation
  of code may also improve usability on other clients.

* COMPILER/INTERPRETER: Implemented the 'STOP' command that was originally available in 1.09.

* DOCUMENTATION: Documented the new 'STOP' command.

* DOCUMENTATION: Adjusted the documentation for the 'GetCourse' command.  It was showing the returned array
  as being zero based - this is not true.

* COMPILER/INTERPRETER: Fixed a bug that was causing the 'LowerCase' command to function like the 'Logging'
  command.

* AUTHENTICATION: Added support for the backup authentication server now hosted in New Zealand.

* TWX FILE IMPORT/EXPORT: Fixed a problem that was causing certain values within the export files to be
  written out of network byte order.

* TERMINAL MENU: Fixed a menu linking problem that was causing access violations when menu items belonging
  to a terminated script were not being released properly from their parent menus.


Scripts/Subs:

* GAMEPREFS: Adjusted this subroutine so that it no longer locks up scripts running in
  older versions of TWGS.

* 2_SENTINEL: Fixed problem with 'Inactivity mode' not starting properly while disconnected.

* 2_SENTINEL: Fixed the menu option name for CLV checks.

* SDF, SDT, SSF, SST, SSM: Added support for game setting checks when these subroutines
  are invoked.  This will prevent the Red pack2 scripts from bugging out if a player's in-game
  settings are not correct for the script.

* WORLDTRADE: Fixed a bug that was causing the script to disable the 'Page on messages' game preference
  without purpose.

* PLANETINFO: Fixed a problem that was causing the script to error on line 65 if the target planet
  has no name.

* 2_PROBE: Fixed a problem that was causing the script to bug out if you tried to change the sector
  to start probing from.

* CHECKCIM: Fixed a problem that was causing the script to report the sector number of closed ports
  incorrectly.  It was reporting the sector number of the port in the list AFTER the one that actually
  closed.

* CHECKCLV: Fixed a potential division by zero error when tracing a corp that has a total of 0 alignment.

* PPT: Added cycle control to prevent the script from overflowing the remote server while PPTing.  This should
  have no negative effect on script speed.


TWX PROXY v2.01 Changes

Program:

* COMPILER: Fixed a problem with parameter count mismatching for the 
  "setMenuOptions" command.

* INTERFACE: Removed the "Data->Select database" option from the taskbar
  menu - it was causing problems that could not be easily corrected.  You
  should select the database through the terminal menu or the setup form
  instead.

* AUTHENTICATION: Made adjustments to HTTP cache specifications that I
  believe will solve the strange cache problems people have been encountering
  while trying to authenticate.

* AUTHENTICATION: Adjusted the setup form to automatically re-authenticate
  when the proxy configuration is changed.

* AUTHENTICATION: Fixed a problem where error messages were being thrown in
  a bad way when the program couldn't find the authentication server.

* DOCUMENTATION: Fixed hyperlink problem.


Scripts/Subs:

* PLANETINFO: Fixed a problem where 100,000 or more colonists producing
  equipment on a planet was causing the script to screw up on a trigger.

* PLANETINFO: Fixed a problem where a planet that had no creator/owner
  line was causing the script to bug out with a cutText error.

* PROBE: Fixed a problem with the turn limiter shutting off the script
  in unlimited turn games.

* PROBE: Fixed a problem where unreached sectors were not being recorded
  properly.



Version 1.09b:

*	Fixed serious CPU usage problems when a sector was displayed.  The cause of this
	was the backdoor index that was blocking up the data 'dump' at the end of the database.
	The backdoor index has now been moved into memory and is calculated when the database
	is loaded.  Unfortunately this means a change in database structure, so 1.08b databases
	are not compatible.

*	Fixed double line spacing in the history window.

*	Fixed the out of sync display in the history window when the
	program is first loaded.

*	Fixed a bug where sectors picked up in the port CIM display
	were not being flagged as calculated/explored.  This meant
	that the port details were there, but they were not being 
	displayed in the $PL and $PU lists.

*	Fixed a bug that was causing the setProgVar command to set
	bogus variables.

*	Fixed a bug that was causing scripts to exit with an unknown
	error when an unexplored sector was retrieved with the getSector command

*	Fixed a bug where aliens were being saved in the database as
	corrupted planets.

*	Fixed a bug that was causing access violations when attempting
	to simulate a holoscan next to a sector that had not been explored.


Version 1.08b:

*	Fixed an error message 'List index out of bounds' that was appearing
	when a game's setup was changed twice in a row.

*	Fixed a problem where the scripts in the Event List were not
	being shown until the event list was switched over/changed.

*	Added a backdoor index to the database.  This allowed the adding of several new
	features.  Including:

	- Faster backdoor checks ($D-)
	- A red '(backdoors)' displayed in the $DD sector display if the sector has backdoors
	  leading into it
	- Backdoor checks on all bubbles and deadends
	- New variables added to the getSector command allowing the retrieval of backdoor info

*	Exported deadend checks now contain 'true' deadends, rather than
	all sectors with only one warp out.

*	Fixed a minor problem where an error dialog would keep being displayed
	when a database was used in a larger game than it was designed for.

*	Made serious rearrangements to much of the code.  This should improve performance
	somewhat.

*	Made improvements to the bubble finder.  It can now locate bubbles of a near limitless
	size, and display all their details in the terminal menu.  The max bubble size can be
	configured in the setup dialog (defaults to 30).  Note that higher bubble sizes will
	result in longer calculation times.  Bubbles with backdoors leading into them are
	shown in red for reference purposes.

*	Added the option to do a variable dump for all active scripts.  This can be done
	by pressing V from the Script menu.

*	Added the ability to handle port CIM data.  Port CIM data is saved automatically
	when the user presses R from the game's CIM prompt.  This data can be queried in
	the new 'Port' menu in the terminal menu.  Port displays can be reconstructed as
	last seen and a summary of port details displayed.

*	Added a new scripting constant by the name of 'CURRENTANSILINE', this
	constant behaves the same as the 'CURRENTLINE' constant, only it
	returns the line without its ANSI codes stripped.

*	The Burst option from the terminal menu is now displayed with its own unique prompt.

*	Made changes to the display of the terminal menu.  All text displayed
	when leaving the terminal will now be in colour (rather than black and white).

*	Improved the density searching option in the terminal menu.  It now
	searches for sectors within a given density range, rather than just being
	higher than a given number.

*	Made some adjustments to protocol handling with connected clients.  This should
	solve several problems with display and key handling with certain terminals.

*	Message history now picks up continuous hails when messages are off.

*	Exported warp CIM data is now tabulated as in the game.  This should
	help provide support for other programs that make use of it.

*	Script variables no longer have a 255 character limit - they are
	limited by available memory.

*	Fixed problems with tabs messing up goto/trigger labels in scripts.

*	Setup data, including program variables, are now saved properly when the program
	is closed, not just when the user hits OK in the setup dialog.

*	Log files will now be saved according to the actual date the data was received rather
	than the date the program was started.

*	Fixed a small bug associated with trying to break connection while already connecting.

*	Fixed problems with ANSI stripping which was preventing triggers
	from being activated on the first few lines of text received from
	some systems.

*	Added the ability to plot warp courses internally.  You can do this
	either through option C in the Data> menu or through one of two
	new scripting commands, getDistance and getCourse.

*	Fixed a problem with the storage of warp information, where sometimes
	warp courses plotted from the computer were being fitted to previous
	courses plotted, causing invalid data.

*	Added a database cache option - this has greatly improved the efficiency 
	of all database activity.

*	Fixed problems with aliens and federals corrupting sector recording.

*	Warps out from sectors are now stored incrementally (as they are in TW), 
	rather than in order of detection.

*	CIM warp data will now be logged if it is listed from the CIM prompt.

*	Fixed a problem where the bottom of sectors displayed from the terminal menu
	were being overlapped by in game messages.

*	Fixed data corruption problems related to doing sector displays while in
	a planet's citadel.

*	Fixed data corruption problems related to ether probes.

*	Fixed a scripting problem where the program would give unknown errors when
	a script would jump into a large block of conditions and encounter a series
	of endif/else statements.

*	The 'IsNumber' scripting command was working with its results around the wrong way.
	This has been adjusted to work the way it was originally intended.

*	If the program fails to find a script when it is loaded, it will now report the
	error in the terminal rather than in an exception dialog.

*	Fixed a bug that was recording 'P indicates Trader is on a planet in that sector' in
	the chat history when the corp member list was displayed.

*	Fixed a problem where empty program variables were not being read properly in scripts

*	Added the following new scripting commands: getDistance, getCourse, fileExists,
	upperCase, lowerCase, rename

*	Made the following changes to the getSector command:

	- Added variable $SECTOR.FIGS.TYPE
	- Added variable $SECTOR.UPDATED
	- Added variable $SECTOR.PORT.BUILDTIME
	- Added variable $SECTOR.PORT.PERC_ORE
	- Added variable $SECTOR.PORT.PERC_ORG
	- Added variable $SECTOR.PORT.PERC_EQUIP
	- Added variable $SECTOR.PORT.BUY_ORE
	- Added variable $SECTOR.PORT.BUY_ORG
	- Added variable $SECTOR.PORT.BUY_EQUIP
	- Added variable $SECTOR.PORT.ORE
	- Added variable $SECTOR.PORT.ORG
	- Added variable $SECTOR.PORT.EQUIP
	- Added variable $SECTOR.PORT.UPDATED
	- Added variable set $SECTOR.TRADER[x].FIGS
	- Added variable set $SECTOR.SHIP[x].NAME
	- Added variable set $SECTOR.SHIP[x].SHIP
	- Added variable set $SECTOR.SHIP[x].OWNER
	- Added variable set $SECTOR.SHIP[x].FIGS
	- Added variable $SECTOR.SHIPS
	- Added variable set $SECTOR.BACKDOOR[x]
	- Removed variable $SECTOR.HASBACKDOORS (it was only in for testing)


Version 1.07b:

*	Replaced the icon with something much better looking.

*	Rewrote telnet connection handling - it should now be much
	more stable, especially when using multiple clients off a
	single TWX server.

*	Rewrote half the script interpreter - it will now work much
	more efficiently and be much more stable in general.

*	Users connecting using LAN IP addresses will no longer be locked
	in view only mode.

*	Log files will no longer be recorded in 'chunks' of data,
	but instead will be saved by their date and the description
	of the database used.

*	Made format changes to the database - it now handles data
	much more efficiently and will be able to cope with later
	features.

*	Added binary search methods to variable data handling in
	scripts.  Estimated script processing speed increase of roughly
	400% (depending on script size).

*	Text will no longer be sent if there is an attached trigger
	to it.  This makes it possible for users to attach their
	scripts to macros or keys for single-key activation.  It also
	means scripts can have a much more flexible interface.

*	Added the ability for users to encrypt their scripts using
	ENCRYPT.EXE and distribute them without their script code being
	disclosed.

*	Removed support for the 'Text Received' script trigger in scripts -
	it can be handled much more efficiently with TextLineTriggers.

*	Fixed double-triggering problems with the 'Text Sent'
	script trigger.

*	Fixed all text concatenation problems in scripts using the '&' character.
	Added support for character references using the '#' character.

*	Setup changes will now be saved as soon as the OK button is
	clicked on the dialog - not when the program exits.  People
	were having problems with their databases not being saved
	if the program errored out.

*	Added the 'systemscript' script command.  This command prevents
	the script from being quick-terminated from the terminal menu.

*	Added the ability to set and clear program variables through
	the 'setprogvar' and 'clearprogvar' script commands.

*	Added a 'getdate' script command (acts in the same way as 'gettime').

*	Script triggers can now be named according to variable references rather
	than static names.  I.e. you could have a trigger named by the value
	held in $variable.

*	Script triggers can now have goto labels according to variable references
	rather than static labels.

*	Fixed multiple prompt displays when messages were received in the terminal.

*	Fixed a problem with values containing brackets in IF statements in scripts.

*	Fixed problem with view only locks on clients being disconnected

*	Added the ability to monitor connected clients by pressing the '-' key from the
	terminal menu.

*	Fixed a problem with the 'delete' command screwing up logging.

*	Fixed a problem with input text being broken up by incoming text from the server.

*	Fixed some line processing problems on server connection which were causing login
	scripts to mess up.

*	.ets files can now be quickloaded when renamed to 1.ets, 2.ets, etc

*	The auto-reconnect feature has been re-enabled.  I'm convinced it was not responsible
	for earlier problems with TWGS.

*	Fixed a problem to do with IF statement structures in the scripting language - nested
	conditions with a certain sequence were causing bazzaire problems.